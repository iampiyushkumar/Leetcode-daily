class Solution {
public:
    int maxFreeTime(int eventTime, int k, vector<int>& startTime, vector<int>& endTime) {
        vector<int>gap;
        int n=startTime.size();
        for(int i=0;i<n;i++)
        {
            if(i==0)
            gap.push_back(startTime[i]-0);
            else
            gap.push_back(startTime[i]-endTime[i-1]);
        }
        gap.push_back(eventTime-endTime[n-1]);
     /*   for(auto x:gap)
        cout<<x<<" ";
        */
        int l=0;
        int sum=0;
        int maxi=0;
        for(int i=0;i<gap.size();i++)
        {
            sum+=gap[i];
            while(i-l>k)
            {
                sum-=gap[l];
                l++;
            }
            maxi=max(maxi,sum);
        }
        return maxi;
    }
};

/*   
0   2   9
1   4   10

gap 1  5  

1    3
2    5

1   1  
*/
