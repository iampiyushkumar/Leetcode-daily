/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
public:
unordered_set<int>st;
 TreeNode* intialize(TreeNode*root,int idx)
 {
    if(root==nullptr)
      return nullptr;
    root->val=idx;
    st.insert(idx);
    root->left=intialize(root->left,2*idx+1);
    root->right=intialize(root->right,2*idx+2);
    return root;
 }
 TreeNode*temp;
    FindElements(TreeNode* root) {
        temp=intialize(root,0);
    }
    
    bool find(int target) {
      if(st.find(target)==st.end())  return false;
      return true;
     }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */
